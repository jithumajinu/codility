package codility;
/*

We want to make an array sorted in non-decreasing order by deleting exactly one item from it. How many ways can we do that ?

For example, if the input array is [3, 4, 5, 4], the answer will 2, as we can delete either 5 or the second 4.

If the array is [3, 4, 5, 2] the answer will be 1, as we can delete 2.

If the array is [1, 2, 3, 4, 5] the answer will be 5, as we can delete any one of the elements.


 */

public class cutTree {


    public static int solution(int[] A) {
        int rmCount = 0;
        for (int i = 1; i < A.length; i++) {

            if (A[i-1] > A[i]) {
                if (rmCount != 0) {
                    return 0;
                }
                if (i == 1 || A[i-2] <= A[i]) {  // in or '||' condition , if first case is true it does not check second so  this case i = 2 and  i -2 is -1 so A[-1] does not throw  outofbound exception
                    rmCount=rmCount+1;
                }
                if (i == A.length - 1 || A[i-1] <= A[i+1]){
                    rmCount=rmCount+1;
                }
                if (rmCount == 0){
                    return 0;
                }
            }
        }
        return (rmCount == 0) ? A.length : rmCount;
    }


    public static void main(String[] args) {

       /* int  A1[] = { 3,4,9,5,6,7,8}; //1
        int  A2[] = { 3,4,9,9,5,6,7,8};  // no cut

        int  A3[] = { 3,4,9,9,9,5,10,11,12};  // 1cut
        int  A4[] = { 3,4,9,4,4,9};
        int  A5[] ={3,4,9,4,10,11,12};  // 1 cut

        int  A6[] = { 1,3,3,3,3,3,3,4,5,6,7,8,9,3,4}; // no
        int  A7[] = { 1,3,3,3,3,3,3,4,5,6,7,8,9,3};
        int  A8[] = { };
        int  A9[] = { 1,3,3,3,3,3,3,4,5,6,7,8,9,3};


        int A[] ={1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	16,	17,	18,	19,	20,	21,	22,	23,	24,	25,	26,	27,	28,	29,	30,	31,	32,	33,	34,	35,	36,	37,	38,	39,	40,	41,	42,	43,	44,	45,	46,	47,	48,	49,	50,	51,	52,	53,	54,	55,	56,	57,	58,	59,	60,	61,	62,	63,	64,	65,	66,	67,	68,	69,	70,	71,	72,	73,	74,	75,	76,	77,	78,	79,	80,	81,	82,	83,	84,	85,	86,	87,	88,	89,	90,	91,	92,	93,	94,	95,	96,	97,	98,	99,	100,	101,	102,	103,	104,	105,	106,	107,	108,	109,	110,	111,	112,	113,	114,	115,	116,	117,	118,	119,	120,	121,	122,	123,	124,	125,	126,	127,	128,	129,	130,	131,	132,	133,	134,	135,	136,	137,	138,	139,	140,	141,	142,	143,	144,	145,	146,	147,	148,	149,	150,	151,	152,	153,	154,	155,	156,	157,	158,	159,	160,	161,	162,	163,	164,	165,	166,	167,	168,	169,	170,	171};
        System.out.println( "--"+solution3(A));
        System.out.println( "--"+solution3(A1));
        System.out.println( "--"+solution3(A2));
        System.out.println( "--"+solution3(A3));
        System.out.println( "--"+solution3(A4));
        System.out.println( "--"+solution3(A5));
        System.out.println( "--"+solution3(A6));
        System.out.println( "--"+solution3(A7));

        System.out.println( "--"+solution3(A8));

        System.out.println( "--"+solution3(A9)); */
        int  A10[] = {2,1,3};
        System.out.println( "--"+solution(A10));


    }


    // 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191
    // 192193194195196197198199200
    // 201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300
    // 301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400
    // 401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454455456457458459460461462463464465466467468469470471472473474475476477478479480481482483484485486487488489490491492493494495496497498499500
    // 501502503504505506507508509510511512513514515516517518519520521522523524525526527528529530531532533534535536537538539540541542543544545546547548549550551552553554555556557558559560561562563564565566567568569570571572573574575576577578579580581582583584585586587588589590591592593594595596597598599600
    // 601602603604605606607608609610611612613614615616617618619620621622623624625626627628629630631632633634635636637638639640641642643644645646647648649650651652653654655656657658659660661662663664665666667668669670671672673674675676677678679680681682683684685686687688689690691692693694695696697698699700
    // 701 702 703 704 705706707708709710711712713714715716 717 718





}



